{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport React from \"react\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"*[_type == \\\"post\\\" && slug.current == $slug][0]{\\n  title,\\n  \\\"name\\\": author->name,\\n  \\\"categories\\\": categories[]->title,\\n  \\\"authorImage\\\": author->image\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport groq from 'groq';\nimport imageUrlBuilder from '@sanity/image-url';\nimport BlockContent from '@sanity/block-content-to-react';\nimport client from '../client';\n\nfunction urlFor(source) {\n  return imageUrlBuilder(client).image(source);\n}\n\nfunction Post(props) {\n  var _props$title = props.title,\n      title = _props$title === void 0 ? 'Missing title' : _props$title,\n      _props$name = props.name,\n      name = _props$name === void 0 ? 'Missing name' : _props$name,\n      categories = props.categories,\n      authorImage = props.authorImage,\n      _props$body = props.body,\n      body = _props$body === void 0 ? [] : _props$body;\n  return React.createElement(\"article\", null, React.createElement(\"h1\", null, title), React.createElement(\"span\", null, \"By \", name), categories && React.createElement(\"ul\", null, \"Posted in\", categories.map(function (category) {\n    return React.createElement(\"li\", {\n      key: category\n    }, category);\n  })), authorImage && React.createElement(\"div\", null, React.createElement(\"img\", {\n    src: urlFor(authorImage).width(50).url()\n  })), React.createElement(BlockContent, _extends({\n    blocks: body,\n    imageOptions: {\n      w: 320,\n      h: 240,\n      fit: 'max'\n    }\n  }, client.config())));\n}\n\nvar query = groq(_templateObject());\n\nPost.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var slug;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            slug = context.query.slug;\n            _context.next = 3;\n            return client.fetch(query, {\n              slug: slug\n            });\n\n          case 3:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Post;","map":{"version":3,"sources":["/Users/jason/Desktop/Coding/Portfolio/Portfolio/v2/blog/web/pages/post.js"],"names":["groq","imageUrlBuilder","BlockContent","client","urlFor","source","image","Post","props","title","name","categories","authorImage","body","map","category","width","url","w","h","fit","config","query","getInitialProps","context","slug","fetch"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,SAASC,MAAT,CAAiBC,MAAjB,EAAyB;AACvB,SAAOJ,eAAe,CAACE,MAAD,CAAf,CAAwBG,KAAxB,CAA8BD,MAA9B,CAAP;AACD;;AAED,SAASE,IAAT,CAAeC,KAAf,EAAsB;AAAA,qBAOhBA,KAPgB,CAElBC,KAFkB;AAAA,MAElBA,KAFkB,6BAEV,eAFU;AAAA,oBAOhBD,KAPgB,CAGlBE,IAHkB;AAAA,MAGlBA,IAHkB,4BAGX,cAHW;AAAA,MAIlBC,UAJkB,GAOhBH,KAPgB,CAIlBG,UAJkB;AAAA,MAKlBC,WALkB,GAOhBJ,KAPgB,CAKlBI,WALkB;AAAA,oBAOhBJ,KAPgB,CAMlBK,IANkB;AAAA,MAMlBA,IANkB,4BAMX,EANW;AAQpB,SACE,qCACE,gCAAKJ,KAAL,CADF,EAEE,yCAAUC,IAAV,CAFF,EAGGC,UAAU,IACT,6CAEGA,UAAU,CAACG,GAAX,CAAe,UAAAC,QAAQ;AAAA,WAAI;AAAI,MAAA,GAAG,EAAEA;AAAT,OAAoBA,QAApB,CAAJ;AAAA,GAAvB,CAFH,CAJJ,EASGH,WAAW,IACV,iCACE;AACE,IAAA,GAAG,EAAER,MAAM,CAACQ,WAAD,CAAN,CACFI,KADE,CACI,EADJ,EAEFC,GAFE;AADP,IADF,CAVJ,EAkBE,oBAAC,YAAD;AACE,IAAA,MAAM,EAAEJ,IADV;AAEE,IAAA,YAAY,EAAE;AAAEK,MAAAA,CAAC,EAAE,GAAL;AAAUC,MAAAA,CAAC,EAAE,GAAb;AAAkBC,MAAAA,GAAG,EAAE;AAAvB;AAFhB,KAGMjB,MAAM,CAACkB,MAAP,EAHN,EAlBF,CADF;AA0BD;;AAED,IAAMC,KAAK,GAAGtB,IAAH,mBAAX;;AAOAO,IAAI,CAACgB,eAAL;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAuB,iBAAgBC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AACbC,YAAAA,IADa,GACJD,OAAO,CAACF,KADJ,CACbG,IADa;AAAA;AAAA,mBAERtB,MAAM,CAACuB,KAAP,CAAaJ,KAAb,EAAoB;AAAEG,cAAAA,IAAI,EAAJA;AAAF,aAApB,CAFQ;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAKA,eAAelB,IAAf","sourcesContent":["import groq from 'groq'\nimport imageUrlBuilder from '@sanity/image-url'\nimport BlockContent from '@sanity/block-content-to-react'\nimport client from '../client'\n\nfunction urlFor (source) {\n  return imageUrlBuilder(client).image(source)\n}\n\nfunction Post (props) {\n  const {\n    title = 'Missing title',\n    name = 'Missing name',\n    categories,\n    authorImage,\n    body = []\n  } = props\n  return (\n    <article>\n      <h1>{title}</h1>\n      <span>By {name}</span>\n      {categories && (\n        <ul>\n          Posted in\n          {categories.map(category => <li key={category}>{category}</li>)}\n        </ul>\n      )}\n      {authorImage && (\n        <div>\n          <img\n            src={urlFor(authorImage)\n              .width(50)\n              .url()}\n          />\n        </div>\n      )}\n      <BlockContent\n        blocks={body}\n        imageOptions={{ w: 320, h: 240, fit: 'max' }}\n        {...client.config()}\n      />\n    </article>\n  )\n}\n\nconst query = groq`*[_type == \"post\" && slug.current == $slug][0]{\n  title,\n  \"name\": author->name,\n  \"categories\": categories[]->title,\n  \"authorImage\": author->image\n}`\n\nPost.getInitialProps = async function (context) {\n  const { slug } = context.query\n  return await client.fetch(query, { slug })\n}\n\nexport default Post"]},"metadata":{},"sourceType":"module"}